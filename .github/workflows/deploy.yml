name: Deploy Ecommerce Fullstack App on EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:   # allow manual run from GitHub UI

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repo
      - name: Checkout Repo
        uses: actions/checkout@v4

      # Step 2: Debug - list files in repo
      - name: List repo files
        run: ls -R

      # Step 3: Build Docker images locally (optional - for testing)
      - name: Build Docker Images
        run: |
          echo "Building Docker images locally for testing..."
          docker build -f docker_files/Dockerfile.backend -t ecommerce-backend .
          docker build -f docker_files/Dockerfile.frontend -t ecommerce-frontend .
          echo "Docker images built successfully!"

      # Step 4: Copy files to EC2 inside ~/ecommercefullstack
      - name: Copy repo to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu   # or ubuntu if Ubuntu server
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "./*"
          target: /home/ubuntu/ecommercefullstack

      # Step 5: SSH into EC2 and deploy with Docker Compose
      - name: Deploy on EC2 with Docker Compose
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu    # âœ… Amazon Linux user
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          debug: true
          script: |
            
            cd ~/ecommercefullstack

            # Install Git if missing
            if ! command -v git &> /dev/null; then
            echo "Installing Git..."
            sudo apt-get update -y
            sudo apt-get install -y git
            fi

            # Install Docker if missing
            if ! command -v docker &> /dev/null; then
            echo "Installing Docker..."
            sudo apt-get update -y
            sudo apt-get install -y ca-certificates curl gnupg lsb-release

            sudo mkdir -p /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

            echo \
                "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
                $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

            sudo apt-get update -y
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

            sudo systemctl enable docker
            sudo systemctl start docker
            fi

            # Create environment file if it doesn't exist
            if [ ! -f .env ]; then
            echo "Creating environment file..."
            cp env.ec2 .env
            fi

            # Stop old containers, rebuild, and restart (with sudo)
            sudo docker compose -f docker-compose.ec2.yml down
            sudo docker compose -f docker-compose.ec2.yml up -d --build

            # Show running containers
            echo "Deployment completed! Running containers:"
            sudo docker ps

            # Show application status
            echo "Application should be available at:"
            echo "Frontend: http://$(curl -s ifconfig.me)"
            echo "Backend: http://$(curl -s ifconfig.me):8081"
